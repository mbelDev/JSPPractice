/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.72
 * Generated at: 2023-03-08 09:12:19 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.PreparedStatement;
import java.sql.Connection;

public final class info_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/member/../include/gnb.jsp", Long.valueOf(1678266670642L));
    _jspx_dependants.put("/member/../include/header.jsp", Long.valueOf(1678266382141L));
    _jspx_dependants.put("/member/../include/footer.jsp", Long.valueOf(1678262558638L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.sql.Connection");
    _jspx_imports_classes.add("java.sql.ResultSet");
    _jspx_imports_classes.add("java.sql.PreparedStatement");
    _jspx_imports_classes.add("java.sql.DriverManager");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"../css/board.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"../css/layout.css\">\r\n");
      out.write("\r\n");
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');

	String loggedUserNM = (String)session.getAttribute("userNM");
	String loggedUserID = (String)session.getAttribute("userID");

      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<header class=\"header\">\r\n");
      out.write("		<div class=\"container\">\r\n");
      out.write("			<div class=\"header-left\"></div>\r\n");
      out.write("			<div class=\"header-center\">\r\n");
      out.write("				<ul class=\"header-center__gnb\">\r\n");
      out.write("					<li class=\"header-center__gnb-mainmenu\">\r\n");
      out.write("						우리는 누구?\r\n");
      out.write("					</li>\r\n");
      out.write("					<li class=\"header-center__gnb-mainmenu\">\r\n");
      out.write("						우리는 무엇을 하는가?\r\n");
      out.write("					</li>\r\n");
      out.write("					<li class=\"header-center__gnb-mainmenu\">\r\n");
      out.write("						우리의 시설들!\r\n");
      out.write("					</li>\r\n");
      out.write("					<li class=\"header-center__gnb-mainmenu\">\r\n");
      out.write("						우리의 활동!\r\n");
      out.write("					</li>\r\n");
      out.write("					<li class=\"header-center__gnb-mainmenu\">\r\n");
      out.write("						우리를 찾아오라!\r\n");
      out.write("					</li>\r\n");
      out.write("				</nav>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"header-right\">\r\n");
      out.write("				<h2 class=\"hidden\"></h2>\r\n");
      out.write("				");
 if(loggedUserID == null) {
      out.write("\r\n");
      out.write("					<span class=\"join\"><a href=\"../member/join.jsp\">회원가입</a></span>\r\n");
      out.write("					<span class=\"login\"><a href=\"../member/login.jsp\">로그인</a></span>\r\n");
      out.write("				");
}else { 
      out.write("\r\n");
      out.write("					<span class=\"info\"><a href=\"../member/info.jsp\">");
      out.print(loggedUserNM );
      out.write("님</a></span>\r\n");
      out.write("					<span class=\"logout\"><a href=\"../member/logout.jsp\">로그아웃</a></span>\r\n");
      out.write("				");
} 
      out.write("\r\n");
      out.write("\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</header>\r\n");
      out.write("\r\n");
      out.write("<script src=\"//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js\"></script>\r\n");

String userID = (String) session.getAttribute("userID");
String userPW = null;
String userNM = null;
String userEM = null;
String userHP = null;
int userZIP = 0;
String userAD = null;

String driver = "oracle.jdbc.OracleDriver";
String url = "jdbc:oracle:thin:@localhost:1521:xe";
String id = "gundam";
String pw = "EFSFsaikou0079";

Connection conn = null;
PreparedStatement psmt = null;
ResultSet result = null;

String sql = "SELECT * FROM MEMBER02 WHERE USERID = ?";

try {
	Class.forName(driver);
	conn = DriverManager.getConnection(url, id, pw);
	psmt = conn.prepareStatement(sql);
	psmt.setString(1, userID);
	result = psmt.executeQuery();
	if (result.next()) {
		userPW = result.getString("USERPW");
		userNM = result.getString("USERNM");
		userEM = result.getString("USEREM");
		userHP = result.getString("USERHP");
		userZIP = result.getInt("USERZIP");
		userAD = result.getString("USERAD");

	} else {
		out.println("<script>alert('회원 정보를 찾을 수 없습니다.');history.back();</script>");
	}
} catch (Exception e) {
	e.printStackTrace();
} finally {
	if (psmt != null) {
		psmt.close();
	}
	if (conn != null) {
		conn.close();
	}
	//연결을 끊을떄는 역순으로. 아주 !important! 하다
}

      out.write("\r\n");
      out.write("<main class=\"main\">\r\n");
      out.write("	<div class=\"container\">\r\n");
      out.write("		<form action=\"info_process.jsp\" method=\"POST\">\r\n");
      out.write("			<table>\r\n");
      out.write("				<colgroup>\r\n");
      out.write("					<col style=\"width: 20%\">\r\n");
      out.write("					<col style=\"width: 80%\">\r\n");
      out.write("				</colgroup>\r\n");
      out.write("				<tbody>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<th>아이디</th>\r\n");
      out.write("						<td><p>");
      out.print(userID);
      out.write("</p></td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<th>비밀번호</th>\r\n");
      out.write("						<td><input type=\"password\" name=\"userPW\" id=\"userPW\"\r\n");
      out.write("							></td>\r\n");
      out.write("					</tr>\r\n");
      out.write("									<tr>\r\n");
      out.write("						<th>비밀번호 확인</th>\r\n");
      out.write("						<td><input type=\"password\" name=\"userPWconfirm\" id=\"userPWconfirm\"\r\n");
      out.write("							></td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<th>이름</th>\r\n");
      out.write("						<td><input type=\"text\" value=\"");
      out.print(userNM);
      out.write("\" name=\"userNM\" id=\"userNM\"></td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<th>메일</th>\r\n");
      out.write("						<td><input type=\"text\" value=\"");
      out.print(userEM);
      out.write("\" name=\"userEM\" id=\"userEM\"></input></td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<th>연락처</th>\r\n");
      out.write("						<td><input type=\"text\" value=\"");
      out.print(userHP);
      out.write("\" name=\"userHP\" id=\"userHP\"></input></td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<th>주소</th>\r\n");
      out.write("						<td>\r\n");
      out.write("							<div>\r\n");
      out.write("								<input type=\"text\" name=\"userZIP\" id=\"userZIP\"\r\n");
      out.write("									placeholder=\"주소를 입력 해 주세요.\" readonly>\r\n");
      out.write("								<button class=\"btn ZIPCODE\">우편번호</button>\r\n");
      out.write("							</div>\r\n");
      out.write("							<div>\r\n");
      out.write("								<input type=\"text\" name=\"userAD01\" id=\"userAD01\"\r\n");
      out.write("									placeholder=\"주소를 입력 해 주세요.\" readonly> <span>기본주소</span>\r\n");
      out.write("							</div>\r\n");
      out.write("							<div>\r\n");
      out.write("								<input type=\"text\" name=\"userAD02\" id=\"userAD02\"\r\n");
      out.write("									placeholder=\"주소를 입력 해 주세요.\"> <input type=\"text\"\r\n");
      out.write("									name=\"userAD03\" id=\"userAD03\" placeholder=\"참고사항.\">\r\n");
      out.write("							</div>\r\n");
      out.write("						</td>\r\n");
      out.write("					</tr>\r\n");
      out.write("				</tbody>\r\n");
      out.write("			</table>\r\n");
      out.write("			<div>\r\n");
      out.write("				<button class=\"btn confirm\">회원정보 수정</button>\r\n");
      out.write("				<button class=\"btn exit\">회원탈퇴</button>\r\n");
      out.write("				<button class=\"btn return\">취소</button>\r\n");
      out.write("			</div>\r\n");
      out.write("		</form>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("</main>\r\n");
      out.write("<script>\r\n");
      out.write("$(\".confirm\").on(\"click\", function() {\r\n");
      out.write("	console.log(\"QUERY!!!\");\r\n");
      out.write("	if ($(\"#userPW\").val() === \"\") {\r\n");
      out.write("		alert(\"비밀번호를 입력 해 주세요.\");\r\n");
      out.write("        $('userPW').focuse();\r\n");
      out.write("	return false;\r\n");
      out.write("	}\r\n");
      out.write("	if ($(\"#userPWconfirm\").val() !== $(\"#userPW\").val()) {\r\n");
      out.write("		alert(\"비밀번호가 일치하지 않습니다.\");\r\n");
      out.write("        $('userPWconfirm').focuse();\r\n");
      out.write("	return false;\r\n");
      out.write("	}\r\n");
      out.write("});\r\n");
      out.write(" $(\".exit\").on(\"click\", function() {\r\n");
      out.write("	 	alert(\"본인 확인을 위하여 아이디, 비밀번호를 입력 해 주세요.\"); location.href='withdraw.jsp';\r\n");
      out.write("			return false;\r\n");
      out.write("		});\r\n");
      out.write(" </script>\r\n");
      out.write("	<footer class=\"footer\">\r\n");
      out.write("		<div>\r\n");
      out.write("			@CopyRighr by Joe Ferro Since 2034 \r\n");
      out.write("		</div>\r\n");
      out.write("	</footer>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
